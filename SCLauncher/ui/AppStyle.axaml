<Styles xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
	
	<Design.PreviewWith>
		<StackPanel Orientation="Vertical" Margin="10" Background="Black" Width="500">
			<StackPanel Orientation="Horizontal" Spacing="10">
				<Button Content="Button"/>
				<Button Content="Accent Button" Classes="accent"/>
				<Button Content="Transparent Button" Classes="Transparent"/>
				<Button Classes="Highlight Rotate Grow">
					<PathIcon Data="{StaticResource arrow_left_regular}"/>
				</Button>
			</StackPanel>
			<NotificationCard Content="Test notification" />
			<StackPanel Orientation="Horizontal" Spacing="5">
				<TextBlock Text="NormalText"/>
				<Border Classes="DashedUnderline" Width="100" VerticalAlignment="Stretch" Padding="0 12 0 0" />
				<TextBlock Text="HighlightColor" Foreground="{StaticResource HighlightColor}"/>
			</StackPanel>
		</StackPanel>
	</Design.PreviewWith>
	
	<Styles.Resources>
		<Color x:Key="HighlightColor">Orange</Color>
		<Color x:Key="BackgroundColor">#292929</Color>
		
		<SolidColorBrush x:Key="Highlight" Color="{StaticResource HighlightColor}"/>
		<SolidColorBrush x:Key="NotificationCardBackgroundBrush" Color="#E9424242"/>
		
		<LinearGradientBrush x:Key="WindowBackground" StartPoint="0%,0%" EndPoint="0%,100%">
			<GradientStop Color="#1D1D1D" Offset="0.0"/>
			<GradientStop Color="{StaticResource BackgroundColor}" Offset="0.2"/>
			<GradientStop Color="{StaticResource BackgroundColor}" Offset="0.9"/>
			<GradientStop Color="#1D1D1D" Offset="1.0"/>
		</LinearGradientBrush>
		
		<LinearGradientBrush x:Key="DashedLineBrush" SpreadMethod="Repeat" StartPoint="4,4" EndPoint="8,4">
			<GradientStop Offset="0" Color="Gray" />
			<GradientStop Offset="0.5" Color="Gray" />
			<GradientStop Offset="0.501" Color="Transparent" />
		</LinearGradientBrush>
		
		<ControlTheme x:Key="{x:Type WindowNotificationManager}" TargetType="WindowNotificationManager">
			<Setter Property="Margin" Value="0 0" />
			<Setter Property="Template">
				<ControlTemplate>
					<ReversibleStackPanel Name="PART_Items" HorizontalAlignment="Stretch">
						<ReversibleStackPanel.DataTemplates>
							<DataTemplate DataType="INotification">
								<StackPanel Margin="12" Spacing="8"
									TextElement.Foreground="{DynamicResource SystemControlForegroundBaseHighBrush}">
									<TextBlock FontWeight="Medium" Text="{Binding Title}" />
									<TextBlock MaxHeight="50" Margin="0,0,12,0"
										Text="{Binding Message}" TextWrapping="Wrap" />
								</StackPanel>
							</DataTemplate>
						</ReversibleStackPanel.DataTemplates>
					</ReversibleStackPanel>
				</ControlTemplate>
			</Setter>
			<Style Selector="^:topright /template/ ReversibleStackPanel#PART_Items">
				<Setter Property="Margin" Value="0 100 15 0" />
				<Setter Property="VerticalAlignment" Value="Top" />
				<Setter Property="HorizontalAlignment" Value="Right" />
			</Style>
			<Style Selector="^:topcenter /template/ ReversibleStackPanel#PART_Items">
				<Setter Property="Margin" Value="0 20 0 0" />
				<Setter Property="VerticalAlignment" Value="Top" />
			</Style>
			<Style Selector="^:bottomcenter /template/ ReversibleStackPanel#PART_Items">
				<Setter Property="ReverseOrder" Value="True" />
				<Setter Property="VerticalAlignment" Value="Bottom" />
			</Style>
			<Style Selector="^:bottomright /template/ ReversibleStackPanel#PART_Items">
				<Setter Property="Margin" Value="0 0 15 0" />
				<Setter Property="VerticalAlignment" Value="Bottom" />
				<Setter Property="HorizontalAlignment" Value="Right" />
			</Style>
		</ControlTheme>
	</Styles.Resources>
	
	<Style Selector="NotificationCard">
		<Setter Property="Width" Value="NaN"/>
	</Style>
	
	<!-- Fix icon buttons -->
	
	<Style Selector="Button:disabled PathIcon">
		<Setter Property="Foreground" Value="{DynamicResource ButtonForegroundDisabled}"/>
	</Style>
	<Style Selector="TabItem:pointerover .TabItemHeader PathIcon">
		<Setter Property="Foreground" Value="{DynamicResource TabItemHeaderForegroundUnselectedPointerOver}"/>
	</Style>
	
	<!-- Utility classes -->
	
	<Style Selector="Border.DashedUnderline">
		<Setter Property="BorderThickness" Value="0 0 0 0.75"/>
		<Setter Property="BorderBrush" Value="{StaticResource DashedLineBrush}"/>
		<Setter Property="Margin" Value="6 0 6 10"/>
		<Setter Property="VerticalAlignment" Value="Bottom"/>
	</Style>
	
	<Style Selector="Button.Transparent">
		<Setter Property="Background" Value="Transparent"/>
		<Style Selector="^:pointerover /template/ ContentPresenter">
			<Setter Property="Background" Value="Transparent"/>
		</Style>
		<Style Selector="^:pressed /template/ ContentPresenter">
			<Setter Property="Background" Value="Transparent"/>
		</Style>
	</Style>
	
	<Style Selector="Button.Grow">
		<Style Selector="^ > :is(Control) > :is(Control)">
			<Setter Property="Transitions">
				<Transitions>
					<TransformOperationsTransition Easing="CubicEaseOut" Property="RenderTransform" Duration="0.3"/>
				</Transitions>
			</Setter>
		</Style>
		<Style Selector="^:pointerover /template/ ContentPresenter">
			<Setter Property="RenderTransform" Value="scale(1.2)"/>
		</Style>
	</Style>
	
	<Style Selector="Button.Skew">
		<Style Selector="^ > :is(Control) > :is(Control)">
			<Setter Property="Transitions">
				<Transitions>
					<TransformOperationsTransition Easing="CubicEaseOut" Property="RenderTransform" Duration="0.3"/>
				</Transitions>
			</Setter>
		</Style>
		<Style Selector="^:pointerover > :is(Control) > :is(Control)">
			<Setter Property="RenderTransform" Value="skew(-25deg)"/>
		</Style>
		<Style Selector="^:pressed > :is(Control) > :is(Control)">
			<Setter Property="RenderTransform" Value="scale(0.6) skew(-25deg)"/>
		</Style>
	</Style>
	
	<Style Selector="Button.Rotate">
		<Style Selector="^ > :is(Control) > :is(Control)">
			<Setter Property="Transitions">
				<Transitions>
					<TransformOperationsTransition Easing="CubicEaseOut" Property="RenderTransform" Duration="0.3"/>
				</Transitions>
			</Setter>
		</Style>
		<Style Selector="^:pointerover > :is(Control) > :is(Control)">
			<Setter Property="RenderTransform" Value="rotate(180deg)"/>
		</Style>
		<Style Selector="^:pressed > :is(Control) > :is(Control)">
			<Setter Property="RenderTransform" Value="rotate(360deg)"/>
		</Style>
	</Style>
	
	<Style Selector="Button.Highlight">
		<Style Selector="^:pointerover > :is(TemplatedControl)">
			<Setter Property="Foreground" Value="{StaticResource Highlight}"/>
		</Style>
	</Style>
	
</Styles>
